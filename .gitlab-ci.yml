---
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml
include:
  - project: nci-gdc/gitlab-templates
    ref: master
    file:
      - /templates/deployments/environments/.gitlab-ci-template.yml
      - /templates/docker/ssh/.gitlab-ci.template.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml
  - template: Security/License-Scanning.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Secret-Detection.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: docker.osdc.io/ncigdc/python38-builder-jdk11:1.4.0

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  SECURE_ANALYZERS_PREFIX: "docker.osdc.io/security-products"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

tox:
  tags:
    - dind
  image: docker.osdc.io/ncigdc/python38-builder-jdk11:1.4.0
  services:
    - name: docker.osdc.io/postgres:13
      alias: postgres
    - name: docker.osdc.io/ncigdc/elasticsearch-docker:7.7.1
      alias: elasticsearch
  script:
    - !reference [.load_github_key, script]
    - apt update
    - apt install openjdk-8-jdk -y
    - pip install tox
    - tox
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust
    ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    xpack_security_enabled: "false"
    discovery_type: "single-node"

test:
  image: docker.osdc.io/ncigdc/python38-builder-jdk11:1.4.0
  tags:
    - dind
  services:
    - name: docker.osdc.io/postgres:13
      alias: postgres
    - name: docker.osdc.io/ncigdc/elasticsearch-docker:7.7.1
      alias: elasticsearch
  script:
    - !reference [.load_github_key, script]
    - python setup.py test
    - pip install tox flake8  # you can also use tox
    - tox -e py36,flake8
  variables:
    POSTGRES_DB: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_HOST_AUTH_METHOD: trust
    ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    xpack_security_enabled: "false"
    discovery_type: "single-node"

run:
  script:
    - !reference [.load_github_key, script]
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

pages:
  script:
    - pip install sphinx sphinx-rtd-theme
    - cd doc ; make html
    - mv build/html/ ../public/
  artifacts:
    paths:
      - public
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
