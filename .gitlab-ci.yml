---
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml
include:
  - project: nci-gdc/gitlab-templates
    ref: master
    file:
      - templates/docker/ssh/.gitlab-ci.template.yml
      - templates/builds/python/cache/.gitlab-ci.template.yml
      - templates/deployments/environments/.gitlab-ci-template.yml
  - template: Code-Quality.gitlab-ci.yml

code_quality:
  services: # Shut off Docker-in-Docker
  allow_failure: true
  tags:
    - cq-sans-dind
  variables:
    CODE_QUALITY_IMAGE: "docker.osdc.io/gitlab-org/ci-cd/codequality:0.85.26"

variables:
  RELEASE_REGISTRY: "dev-containers.osdc.io"

workflow:
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      variables:
        RELEASE_REGISTRY: "containers.osdc.io"  # Override globally-defined RELEASE_REGISTRY
    - if: $CI_COMMIT_REF_NAME =~ /master/
      variables:
        RELEASE_REGISTRY: "containers.osdc.io"
    - when: always

stages:
  - test
  - build
  - deploy

tox-py38:
  stage: test
  tags:
    - dind
  image: docker.osdc.io/ncigdc/python38-builder-jdk11:1.4.0
  services:
    - name: docker.osdc.io/ncigdc/ci-postgres-13:chore_add-python3.9_and_3.10-16
      alias: postgres
    - name: docker.osdc.io/ncigdc/ci-elasticsearch-7:chore_add-python3.9_and_3.10-16
      alias: elasticsearch
  script:
    - !reference [.load_github_key, script]
    - python --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install tox
    - tox
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust
  artifacts:
    when: always
    reports:
      cobertura: coverage.xml
      junit: test-reports/results.xml

tox-py27:
  stage: test
  tags:
    - dind
  image: docker.osdc.io/ncigdc/python27-builder:1.4.0
  services:
    - name: docker.osdc.io/postgres:13
      alias: postgres
    - name: docker.osdc.io/ncigdc/elasticsearch-docker:7.7.1
      alias: elasticsearch
  script:
    - !reference [.load_github_key, script]
    - mkdir -p /usr/share/man/man1
    - apt update && apt install openjdk-11-jdk -y --no-install-recommends
    - python --version  # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install tox
    - tox
  variables:
    POSTGRES_HOST_AUTH_METHOD: trust
  artifacts:
    when: always
    reports:
      cobertura: coverage.xml
      junit: test-reports/results.xml


run:
  stage: build
  script:
    - !reference [.load_github_key, script]
    - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    - pip install dist/*
    # run the command here
  artifacts:
    paths:
      - dist/*.whl

docker_build:
  stage: build
  tags:
    - dind
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'
      when: always
  script:
    - docker build -t $RELEASE_REGISTRY/indexd:$CI_COMMIT_REF_NAME .
    - docker push $RELEASE_REGISTRY/indexd:$CI_COMMIT_REF_NAME
