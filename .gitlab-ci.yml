---
include:
  - project: nci-gdc/gitlab-templates
    ref: 0.2.0-rc
    file:
      - templates/global/full.yaml
      - templates/python/full.yaml
      - templates/deployments/salt-service.yaml

.services:
  allow_failure: true
  stage: deploy
  when: manual
  parallel:
    matrix:
      - DEPLOY_SERVICE_LIST: [ portal2 ]

variables:
  PRE_COMMIT_PY_VERSION: '3.8'
  PRE_COMMIT_VERSION: 3.2.1

tox:
  stage: test
  parallel:
    matrix:
      - PY_VER:
          - '3.6'
          - '3.7'
          - '3.8'
  image: ${BASE_CONTAINER_REGISTRY}/python${PY_VER}-builder:${BASE_CONTAINER_VERSION}
  tags:
    - dind
  services:
    - name: docker.osdc.io/ncigdc/ci-postgres-13:${BASE_CONTAINER_VERSION}
      alias: postgres
  variables:
    PG_INDEXD_USER: test
    PG_INDEXD_PASS: test
    PG_INDEXD_HOST: postgres
    PG_INDEXD_DROP_DB: 'false'
    PG_INDEXD_ROOT_USER: test
    PG_INDEXD_ROOT_PASS: test
    POSTGRES_DB: indexd_test
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    POSTGRES_HOST_AUTH_METHOD: trust
  before_script:
    - pip install 'tox < 4'
    - mkdir -p /usr/share/man/man1
    - apt update && apt -y install openjdk-8-jdk-headless
    - java -version
  script:
    - !reference [.load_github_key, script]
    - tox -e py

Docker build:
  stage: release
  before_script:
    - apk add bash git
  script:
    - !reference [.load_github_key, script]
    - /bin/bash docker.sh
  except:
    - tags
  tags:
    - dind

Docker build git tag:
  stage: release
  before_script:
    - apk add bash git
  script:
    - docker pull $DOCKER_RELEASE_REGISTRY/ncigdc/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG-${CI_COMMIT_SHORT_SHA}
    - docker tag $DOCKER_RELEASE_REGISTRY/ncigdc/$CI_PROJECT_NAME:$CI_COMMIT_REF_SLUG-${CI_COMMIT_SHORT_SHA} $DOCKER_RELEASE_REGISTRY/ncigdc/$CI_PROJECT_NAME:${CI_COMMIT_TAG}
    - docker push $DOCKER_RELEASE_REGISTRY/ncigdc/$CI_PROJECT_NAME:${CI_COMMIT_TAG}
  only:
    - tags
  tags:
    - dind
