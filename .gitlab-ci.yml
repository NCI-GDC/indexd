---
include:
  - project: nci-gdc/gitlab-templates
    ref: feat/dev-2667-python-docker-services
    file:
      - templates/artifacts/python-service.yaml

variables:
  SERVICE_NAME: indexd

tox:
  parallel:
    matrix:
      - BUILD_PY_VERSION: [python3.7, python3.8, python3.9, python3.10, python3.11]
  services:
    - name: docker.osdc.io/ncigdc/ci-postgres-13:${BASE_CONTAINER_VERSION}
      alias: postgres
  variables:
    PG_INDEXD_USER: test
    PG_INDEXD_PASS: test
    PG_INDEXD_HOST: postgres
    PG_INDEXD_DROP_DB: 'false'
    PG_INDEXD_ROOT_USER: test
    PG_INDEXD_ROOT_PASS: test
    POSTGRES_DB: indexd_test
    POSTGRES_USER: test
    POSTGRES_PASSWORD: test
    POSTGRES_HOST_AUTH_METHOD: trust
  script:
    - mkdir -p /usr/share/man/man1
    - dnf -y install java-11-amazon-corretto-headless
    - java -version
    - pip install 'tox > 4'
    - tox -e py

containerize:
  stage: build-and-publish
  extends: .job-with-ssh-keys
  image: ${BASE_CONTAINER_REGISTRY}/${LANGUAGE_VERSION}-builder:${BASE_CONTAINER_VERSION}
  needs:
    - publish
  variables:
    DOCKER_BUILDKIT: 1
    CONTAINER_REGISTRY: $CONTAINER_REGISTRY
  script: |-
    - pip install 'tox > 4'
    - export SERVICE_INSTALL_CMD=$SERVICE_NAME==$(python -m setuptools_scm)
    - tox -re containerize

.deploy-service-with-salt:
  before_script:
    - export DEPLOY_SERVICE_TAG=${CI_COMMIT_TAG:-$CI_COMMIT_SHA}

.services:
  allow_failure: true
  stage: deploy
  when: manual
  parallel:
    matrix:
      - DEPLOY_SERVICE_LIST: [ indexd ]
